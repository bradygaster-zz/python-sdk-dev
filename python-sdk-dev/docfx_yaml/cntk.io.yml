#YamlMime:PythonReference
api_name: []
items:
- _type: module
  children:
  - cntk.io.CTFDeserializer
  - cntk.io.HTKFeatureDeserializer
  - cntk.io.HTKMLFDeserializer
  - cntk.io.ImageDeserializer
  - cntk.io.MinibatchData
  - cntk.io.MinibatchSource
  - cntk.io.StreamConfiguration
  - cntk.io.StreamDef
  - cntk.io.sequence_to_cntk_text_format
  fullName: cntk.io
  langs:
  - python
  module: cntk.io
  name: io
  source:
    id: io
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 0
  type: Namespace
  uid: cntk.io
- _type: function
  fullName: cntk.io.CTFDeserializer
  langs:
  - python
  module: cntk.io
  name: CTFDeserializer
  seealso: 'See also: [CNTKTextReader format](https://github.com/microsoft/cntk/wiki/BrainScript-CNTKTextFormat-Reader)'
  source:
    id: CTFDeserializer
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 455
  summary: "Configures the CNTK text-format reader that reads text-based files with\
    \ lines of the form:\n<!-- literal_block {\"xml:space\": \"preserve\", \"dupnames\"\
    : [], \"classes\": [], \"ids\": [], \"backrefs\": [], \"names\": []} -->\n\n````\n\
    \n   [Sequence_Id] (Sample)+\n   ````\nwhere:\n<!-- literal_block {\"xml:space\"\
    : \"preserve\", \"dupnames\": [], \"classes\": [], \"ids\": [], \"backrefs\":\
    \ [], \"names\": []} -->\n\n````\n\n   Sample=|Input_Name (Value )*\n   ````"
  syntax:
    content: CTFDeserializer(filename, streams)
    parameters:
    - id: filename
    - description: file name containing the text input
      id: filename
      type:
      - str
  type: Method
  uid: cntk.io.CTFDeserializer
- _type: function
  fullName: cntk.io.HTKFeatureDeserializer
  langs:
  - python
  module: cntk.io
  name: HTKFeatureDeserializer
  source:
    id: HTKFeatureDeserializer
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 377
  summary: Configures the HTK feature reader that reads speech data from scp files.
  syntax:
    content: HTKFeatureDeserializer(streams)
    parameters:
    - description: any dictionary-like object that contains a mapping from stream
        names to `StreamDef` objects. Each StreamDef object configures a feature stream.
      id: streams
  type: Method
  uid: cntk.io.HTKFeatureDeserializer
- _type: function
  fullName: cntk.io.HTKMLFDeserializer
  langs:
  - python
  module: cntk.io
  name: HTKMLFDeserializer
  source:
    id: HTKMLFDeserializer
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 398
  summary: Configures an HTK label reader that reads speech HTK format MLF (Master
    Label File)
  syntax:
    content: HTKMLFDeserializer(label_mapping_file, streams)
    parameters:
    - description: path to the label mapping file
      id: label_mapping_file
      type:
      - str
    - description: any dictionary-like object that contains a mapping from stream
        names to `StreamDef` objects. Each StreamDef object configures a label stream.
      id: streams
  type: Method
  uid: cntk.io.HTKMLFDeserializer
- _type: function
  fullName: cntk.io.ImageDeserializer
  langs:
  - python
  module: cntk.io
  name: ImageDeserializer
  seealso: 'See also: [Image reader definition](https://github.com/microsoft/cntk/wiki/Image-reader)'
  source:
    id: ImageDeserializer
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 418
  summary: "Configures the image reader that reads images and corresponding labels\
    \ from a file of the form:\n<!-- literal_block {\"xml:space\": \"preserve\", \"\
    dupnames\": [], \"classes\": [], \"ids\": [], \"backrefs\": [], \"names\": []}\
    \ -->\n\n````\n\n   <full path to image> <tab> <numerical label (0-based class\
    \ id)>\n   ````\nor:\n<!-- literal_block {\"xml:space\": \"preserve\", \"dupnames\"\
    : [], \"classes\": [], \"ids\": [], \"backrefs\": [], \"names\": []} -->\n\n````\n\
    \n   sequenceId <tab> path <tab> label\n   ````"
  syntax:
    content: ImageDeserializer(filename, streams)
    parameters:
    - id: filename
    - description: file name of the map file that associates images to classes
      id: filename
      type:
      - str
  type: Method
  uid: cntk.io.ImageDeserializer
- _type: function
  fullName: cntk.io.StreamDef
  langs:
  - python
  module: cntk.io
  name: StreamDef
  source:
    id: StreamDef
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 497
  summary: Configuration of a stream for use with the builtin Deserializers. The meanings
    of some configuration keys have a mild dependency on the exact deserializer, and
    certain keys are meaningless for certain deserializers.
  syntax:
    content: StreamDef(field=None, shape=None, is_sparse=False, transforms=None, context=None,
      scp=None, mlf=None, broadcast=None)
    parameters:
    - defaultValue: None
      description: 'this is the name of the stream


        * for CTFDeserializer the name is inside the CTF file


        * for ImageDeserializer the acceptable names are *image* or *label*


        * for HTKFeatureDeserializer and HTKMLFDeserializer only the default value
        of None is acceptable'
      id: field
      type:
      - str, defaults to None
    - defaultValue: None
      description: dimensions of this stream. HTKFeatureDeserializer, HTKMLFDeserializer,
        and CTFDeserializer read data as flat arrays. If you need different shapes
        you can `reshape()` it later.
      id: shape
      type:
      - int or tuple, defaults to None
    - defaultValue: None
      description: whether the provided data is sparse. *False* by default, unless
        mlf is provided.
      id: is_sparse
      type:
      - bool, defaults to False
    - defaultValue: None
      description: list of transforms to be applied by the Deserializer. Currently
        only ImageDeserializer supports transforms.
      id: transforms
      type:
      - list, defaults to None
    - defaultValue: 'False'
      description: left and right context to consider when reading in HTK data. Only
        supported by HTKFeatureDeserializer.
      id: context
      type:
      - tuple, defaults to None
    - defaultValue: None
      description: scp files for HTK data
      id: scp
      type:
      - str or list, defaults to None
    - defaultValue: None
      description: mlf files for HTK data
      id: mlf
      type:
      - str or list, defaults to None
    - description: whether the features in this stream should be broadcast to the
        whole sequence (useful in e.g. ivectors with HTK)
      id: broadcast
      type:
      - bool, defaults to None
  type: Method
  uid: cntk.io.StreamDef
- _type: function
  fullName: cntk.io.sequence_to_cntk_text_format
  langs:
  - python
  module: cntk.io
  name: sequence_to_cntk_text_format
  source:
    id: sequence_to_cntk_text_format
    path: cntk/io/__init__.py
    remote:
      branch: master
      path: cntk/io/__init__.py
      repo: https://github.com/Microsoft/CNTK
    startLine: 598
  summary: Converts a list of NumPy arrays representing tensors of inputs into a format
    that is readable by @cntk.io.CTFDeserializer.
  syntax:
    content: sequence_to_cntk_text_format(seq_idx, alias_tensor_map)
    parameters:
    - description: number of current sequence
      id: seq_idx
      type:
      - int
    - description: maps alias (str) to tensor (ndarray). Tensors are assumed to have
        dynamic axis.
      id: alias_tensor_map
      type:
      - dict
    return:
      description: '<SYSTEM MESSAGE: /root/CNTK/bindings/python/doc/cntk.io.rst:2:
        (INFO/1) Duplicate explicit target name: "cntktextreader format".>


        String representation in [CNTKTextReader format](https://github.com/microsoft/cntk/wiki/BrainScript-CNTKTextFormat-Reader)'
      type:
      - str
  type: Method
  uid: cntk.io.sequence_to_cntk_text_format
references:
- fullName: cntk.io.CTFDeserializer
  isExternal: false
  name: CTFDeserializer
  parent: cntk.io
  uid: cntk.io.CTFDeserializer
- fullName: cntk.io.HTKFeatureDeserializer
  isExternal: false
  name: HTKFeatureDeserializer
  parent: cntk.io
  uid: cntk.io.HTKFeatureDeserializer
- fullName: cntk.io.HTKMLFDeserializer
  isExternal: false
  name: HTKMLFDeserializer
  parent: cntk.io
  uid: cntk.io.HTKMLFDeserializer
- fullName: cntk.io.ImageDeserializer
  isExternal: false
  name: ImageDeserializer
  parent: cntk.io
  uid: cntk.io.ImageDeserializer
- fullName: cntk.io.MinibatchData
  isExternal: false
  name: MinibatchData
  parent: cntk.io
  uid: cntk.io.MinibatchData
- fullName: cntk.io.MinibatchSource
  isExternal: false
  name: MinibatchSource
  parent: cntk.io
  uid: cntk.io.MinibatchSource
- fullName: cntk.io.StreamConfiguration
  isExternal: false
  name: StreamConfiguration
  parent: cntk.io
  uid: cntk.io.StreamConfiguration
- fullName: cntk.io.StreamDef
  isExternal: false
  name: StreamDef
  parent: cntk.io
  uid: cntk.io.StreamDef
- fullName: cntk.io.sequence_to_cntk_text_format
  isExternal: false
  name: sequence_to_cntk_text_format
  parent: cntk.io
  uid: cntk.io.sequence_to_cntk_text_format
