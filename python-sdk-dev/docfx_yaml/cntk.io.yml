api_name: []
items:
- _type: module
  children:
  - cntk.io.CTFDeserializer
  - cntk.io.HTKFeatureDeserializer
  - cntk.io.HTKMLFDeserializer
  - cntk.io.ImageDeserializer
  - cntk.io.MinibatchData
  - cntk.io.MinibatchSource
  - cntk.io.StreamConfiguration
  - cntk.io.StreamDef
  - cntk.io.sequence_to_cntk_text_format
  fullName: cntk.io
  module: cntk.io
  name: io
  references:
  - fullName: cntk.io.CTFDeserializer
    isExternal: false
    name: CTFDeserializer
    parent: ''
    uid: cntk.io.CTFDeserializer
  - fullName: cntk.io.HTKFeatureDeserializer
    isExternal: false
    name: HTKFeatureDeserializer
    parent: ''
    uid: cntk.io.HTKFeatureDeserializer
  - fullName: cntk.io.HTKMLFDeserializer
    isExternal: false
    name: HTKMLFDeserializer
    parent: ''
    uid: cntk.io.HTKMLFDeserializer
  - fullName: cntk.io.ImageDeserializer
    isExternal: false
    name: ImageDeserializer
    parent: ''
    uid: cntk.io.ImageDeserializer
  - fullName: cntk.io.MinibatchData
    isExternal: false
    name: MinibatchData
    parent: ''
    uid: cntk.io.MinibatchData
  - fullName: cntk.io.MinibatchSource
    isExternal: false
    name: MinibatchSource
    parent: ''
    uid: cntk.io.MinibatchSource
  - fullName: cntk.io.StreamConfiguration
    isExternal: false
    name: StreamConfiguration
    parent: ''
    uid: cntk.io.StreamConfiguration
  - fullName: cntk.io.StreamDef
    isExternal: false
    name: StreamDef
    parent: ''
    uid: cntk.io.StreamDef
  - fullName: cntk.io.sequence_to_cntk_text_format
    isExternal: false
    name: sequence_to_cntk_text_format
    parent: ''
    uid: cntk.io.sequence_to_cntk_text_format
  source:
    id: io
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 0
  type: Namespace
  uid: cntk.io
- _type: function
  fullName: cntk.io.CTFDeserializer
  module: cntk.io
  name: CTFDeserializer
  source:
    id: CTFDeserializer
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 455
  syntax:
    exceptions: []
    parameters:
    - description: file name containing the text input
      id: filename
      type: str
    returntype: ''
    returnvalue: ''
    summary: "Configures the CNTK text-format reader that reads text-based files with\
      \ lines of the form:\n<!-- literal_block {\"classes\": [], \"backrefs\": [],\
      \ \"dupnames\": [], \"ids\": [], \"names\": [], \"xml:space\": \"preserve\"\
      } -->\n\n````\n\n   [Sequence_Id] (Sample)+\n   ````\nwhere:\n<!-- literal_block\
      \ {\"classes\": [], \"backrefs\": [], \"dupnames\": [], \"ids\": [], \"names\"\
      : [], \"xml:space\": \"preserve\"} -->\n\n````\n\n   Sample=|Input_Name (Value\
      \ )*\n   ````\nSee also: [CNTKTextReader format](https://github.com/microsoft/cntk/wiki/BrainScript-CNTKTextFormat-Reader)"
    variables: []
  type: Method
  uid: cntk.io.CTFDeserializer
- _type: function
  fullName: cntk.io.HTKFeatureDeserializer
  module: cntk.io
  name: HTKFeatureDeserializer
  source:
    id: HTKFeatureDeserializer
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 377
  syntax:
    exceptions: []
    parameters: []
    returntype: ''
    returnvalue: ''
    summary: Configures the HTK feature reader that reads speech data from scp files.
    variables: []
  type: Method
  uid: cntk.io.HTKFeatureDeserializer
- _type: function
  fullName: cntk.io.HTKMLFDeserializer
  module: cntk.io
  name: HTKMLFDeserializer
  source:
    id: HTKMLFDeserializer
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 398
  syntax:
    exceptions: []
    parameters:
    - description: path to the label mapping file
      id: label_mapping_file
      type: str
    returntype: ''
    returnvalue: ''
    summary: Configures an HTK label reader that reads speech HTK format MLF (Master
      Label File)
    variables: []
  type: Method
  uid: cntk.io.HTKMLFDeserializer
- _type: function
  fullName: cntk.io.ImageDeserializer
  module: cntk.io
  name: ImageDeserializer
  source:
    id: ImageDeserializer
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 418
  syntax:
    exceptions: []
    parameters:
    - description: file name of the map file that associates images to classes
      id: filename
      type: str
    returntype: ''
    returnvalue: ''
    summary: "Configures the image reader that reads images and corresponding labels\
      \ from a file of the form:\n<!-- literal_block {\"classes\": [], \"backrefs\"\
      : [], \"dupnames\": [], \"ids\": [], \"names\": [], \"xml:space\": \"preserve\"\
      } -->\n\n````\n\n   <full path to image> <tab> <numerical label (0-based class\
      \ id)>\n   ````\nor:\n<!-- literal_block {\"classes\": [], \"backrefs\": [],\
      \ \"dupnames\": [], \"ids\": [], \"names\": [], \"xml:space\": \"preserve\"\
      } -->\n\n````\n\n   sequenceId <tab> path <tab> label\n   ````\nSee also: [Image\
      \ reader definition](https://github.com/microsoft/cntk/wiki/Image-reader)"
    variables: []
  type: Method
  uid: cntk.io.ImageDeserializer
- _type: function
  fullName: cntk.io.StreamDef
  module: cntk.io
  name: StreamDef
  source:
    id: StreamDef
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 497
  syntax:
    exceptions: []
    parameters:
    - description: 'this is the name of the stream


        * for CTFDeserializer the name is inside the CTF file


        * for ImageDeserializer the acceptable names are *image* or *label*


        * for HTKFeatureDeserializer and HTKMLFDeserializer only the default value
        of None is acceptable'
      id: scp
      type: str or list, defaults to None
    - description: dimensions of this stream. HTKFeatureDeserializer, HTKMLFDeserializer,
        and CTFDeserializer read data as flat arrays. If you need different shapes
        you can `reshape()` it later.
      id: transforms
      type: list, defaults to None
    - description: whether the provided data is sparse. *False* by default, unless
        mlf is provided.
      id: context
      type: tuple, defaults to None
    - description: list of transforms to be applied by the Deserializer. Currently
        only ImageDeserializer supports transforms.
      id: mlf
      type: str or list, defaults to None
    - description: left and right context to consider when reading in HTK data. Only
        supported by HTKFeatureDeserializer.
      id: shape
      type: int or tuple, defaults to None
    - description: scp files for HTK data
      id: broadcast
      type: bool, defaults to None
    - description: mlf files for HTK data
      id: field
      type: str, defaults to None
    - description: whether the features in this stream should be broadcast to the
        whole sequence (useful in e.g. ivectors with HTK)
      id: is_sparse
      type: bool, defaults to False
    returntype: ''
    returnvalue: ''
    summary: Configuration of a stream for use with the builtin Deserializers. The
      meanings of some configuration keys have a mild dependency on the exact deserializer,
      and certain keys are meaningless for certain deserializers.
    variables: []
  type: Method
  uid: cntk.io.StreamDef
- _type: function
  fullName: cntk.io.sequence_to_cntk_text_format
  module: cntk.io
  name: sequence_to_cntk_text_format
  source:
    id: sequence_to_cntk_text_format
    path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
    remote:
      branch: '/bin/sh: 1: git: not found'
      path: root/anaconda3/envs/cntk-py35/lib/python3.5/site-packages/cntk/io/__init__.py
      repo: null
    startLine: 598
  syntax:
    exceptions: []
    parameters:
    - description: number of current sequence
      id: seq_idx
      type: int
    - description: maps alias (str) to tensor (ndarray). Tensors are assumed to have
        dynamic axis.
      id: alias_tensor_map
      type: dict
    returntype: str
    returnvalue: '<SYSTEM MESSAGE: /root/cntk-python/doc/cntk.io.rst:2: (INFO/1) Duplicate
      explicit target name: "cntktextreader format".>


      String representation in [CNTKTextReader format](https://github.com/microsoft/cntk/wiki/BrainScript-CNTKTextFormat-Reader)'
    summary: Converts a list of NumPy arrays representing tensors of inputs into a
      format that is readable by `CTFDeserializer`.
    variables: []
  type: Method
  uid: cntk.io.sequence_to_cntk_text_format
